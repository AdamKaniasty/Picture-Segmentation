# wersja ze zbijaniem w paczki
step_size = 16
batch_size = 32
batch_list = []
for vertical_shift in range(0, W, step_size):
    for horizontal_shift in range(0, H, step_size):
        top=horizontal_shift
        bottom=224+horizontal_shift
        left=verticall_shift
        right=224+verticall_shift
        current_crop = img.crop((left, top, right, bottom))
        current_tensor = torchvision.transforms.ToTensor()(imgc).to(device)
        batch_list.append(current_tensor)
        if len(batch_list) == batch_size:
            batch_of_tensors = torch.stack(batch_list)
            wrzuć do modelu -> wyjście wymiaru 32xliczba kategorii
            zrób cyrk z M, C i P
            batch_list = []
            
            
            
zera wokół obrazka: https://pytorch.org/docs/stable/torchvision/transforms.html#torchvision.transforms.Pad

M - macierz wymiaru HxWxliczba kategorii
C - macierz wymiaru HxWx1
to "+1" to licznik tego, ile razy dla danych współrzędnych pojawiła się predykcja

Przychodzi predykcja, zamieniasz ją na macierz P wymiaru 224x224xliczba kategorii oraz pamiętasz horizontal_shift i vertical_shift.

y = horizontal_shift
x = vertical_shift
M[y:y+224, x:x+224] = (M[y:y+224, x:x+224] * C[y:y+224, x:x+224, None] + P) / (C[y:y+224, x:x+224, None] + 1)
C[y:y+224, x:x+224, None] += 1

Na samym końcu bierzesz argmax(M, axis=2)

step_size = 100
for vertical_shift in range(0, x, step_size):
    for horizontal_shift in range(0, y, step_size):
        top=horizontal_shift
        bottom=224+horizontal_shift
        left=vertical_shift
        right=224+vertical_shift
        current_crop = img.crop((left, top, right, bottom))
        current_tensor = torchvision.transforms.ToTensor()(current_crop).unsqueeze(0).to(device)
        output = model(current_tensor)
        P = F.softmax(output, dim=1).cpu().data.numpy()
        y = horizontal_shift
        x = vertical_shift
        M[y:y+224, x:x+224] = (M[y:y+224, x:x+224] * C[y:y+224, x:x+224, None] + P) / (C[y:y+224, x:x+224, None] + 1)
        C[y:y+224, x:x+224, None] += 1